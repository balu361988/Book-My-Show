{"ast":null,"code":"var _jsxFileName = \"/root/Book-My-Show/bookmyshow-app/src/Pages/BookTicketsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCinemas } from \"../Redux/cinemas/action\";\nimport { CinemasBody } from \"../Components/BookTickets/CinemasBody\";\nimport { useParams } from \"react-router\";\nimport { Header } from \"../Components/BookTickets/Header\";\nimport { getMovies } from \"../Redux/data/actions\";\nimport { Filter } from \"../Components/BookTickets/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookTicketsPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const [filters, setFilters] = useState([]);\n  const [count, setCount] = useState(0);\n  // const movie = useSelector(state => state.data.movies).data;\n  const movie_name = useSelector(state => state.booking_details);\n  // console.log(movie_name)\n  // const [bookingDetails, setBookingDetails] = useState({\n  //     movie_name: \"\",\n  //     date: \"\",\n  //     day: \"\",\n  //     time: \"\",\n  //     cinemas_name: \"\"\n  // });\n\n  useEffect(() => {\n    dispatch(getCinemas());\n    dispatch(getMovies(id));\n  }, []);\n  const handleFilters = item => {\n    const newData = filters;\n    if (filters.indexOf(item) >= 0) {\n      newData.splice(filters.indexOf(item), 1);\n      setFilters(newData);\n    } else {\n      newData.push(item);\n      setFilters(newData);\n    }\n    setCount(prev => prev + 1);\n  };\n\n  // const handleSelectNameTime = (cinemas_name, time) => {\n  //     console.log(cinemas_name, time)\n  //     setBookingDetails({ ...bookingDetails, cinemas_name, time })\n  //     setCount(prev => prev + 1);\n  // }\n\n  // const handleSelectDate = (date, day) => {\n  //     setBookingDetails({ ...bookingDetails, date, day });\n  //     setCount(prev => prev + 1);\n  // }\n\n  // const handleMovieName = (movie_name) => {\n  //     setBookingDetails({ ...bookingDetails, movie_name })\n  // }\n\n  useEffect(() => {\n    // console.log(count, \"count\")\n    // console.log(bookingDetails)\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#F2F2F2\",\n      paddingBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleFilters: handleFilters,\n      filters: filters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CinemasBody, {\n      filters: filters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(BookTicketsPage, \"8HNNXYhqno41MFcz4sGPBPLvCEc=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = BookTicketsPage;\nvar _c;\n$RefreshReg$(_c, \"BookTicketsPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getCinemas","CinemasBody","useParams","Header","getMovies","Filter","jsxDEV","_jsxDEV","BookTicketsPage","_s","dispatch","id","filters","setFilters","count","setCount","movie_name","state","booking_details","handleFilters","item","newData","indexOf","splice","push","prev","style","backgroundColor","paddingBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/Book-My-Show/bookmyshow-app/src/Pages/BookTicketsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCinemas } from \"../Redux/cinemas/action\";\nimport { CinemasBody } from \"../Components/BookTickets/CinemasBody\";\n\nimport { useParams } from \"react-router\";\nimport { Header } from \"../Components/BookTickets/Header\";\nimport { getMovies } from \"../Redux/data/actions\";\nimport { Filter } from \"../Components/BookTickets/Filter\";\n\nexport const BookTicketsPage = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const [filters, setFilters] = useState([])\n    const [count, setCount] = useState(0)\n    // const movie = useSelector(state => state.data.movies).data;\n    const movie_name = useSelector(state => state.booking_details);\n    // console.log(movie_name)\n    // const [bookingDetails, setBookingDetails] = useState({\n    //     movie_name: \"\",\n    //     date: \"\",\n    //     day: \"\",\n    //     time: \"\",\n    //     cinemas_name: \"\"\n    // });\n\n\n    useEffect(() => {\n        dispatch(getCinemas());\n        dispatch(getMovies(id));\n    }, [])\n\n    const handleFilters = (item) => {\n        const newData = filters;\n        if (filters.indexOf(item) >= 0) {\n            newData.splice(filters.indexOf(item), 1);\n            setFilters(newData);\n        } else {\n            newData.push(item);\n            setFilters(newData);\n        }\n        setCount(prev => prev + 1);\n    }\n\n    // const handleSelectNameTime = (cinemas_name, time) => {\n    //     console.log(cinemas_name, time)\n    //     setBookingDetails({ ...bookingDetails, cinemas_name, time })\n    //     setCount(prev => prev + 1);\n    // }\n\n    // const handleSelectDate = (date, day) => {\n    //     setBookingDetails({ ...bookingDetails, date, day });\n    //     setCount(prev => prev + 1);\n    // }\n\n    // const handleMovieName = (movie_name) => {\n    //     setBookingDetails({ ...bookingDetails, movie_name })\n    // }\n\n    useEffect(() => {\n        // console.log(count, \"count\")\n        // console.log(bookingDetails)\n    }, [count])\n\n    return (\n        <div style={{ backgroundColor: \"#F2F2F2\", paddingBottom: 20 }}>\n            <Header />\n            <Filter handleFilters={handleFilters} filters={filters} />\n            <CinemasBody filters={filters} />\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,WAAW,QAAQ,uCAAuC;AAEnE,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,MAAM,QAAQ,kCAAkC;AACzD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,MAAM,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA,MAAMmB,UAAU,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,eAAe,CAAC;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAtB,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC;IACtBU,QAAQ,CAACN,SAAS,CAACO,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAIC,IAAI,IAAK;IAC5B,MAAMC,OAAO,GAAGT,OAAO;IACvB,IAAIA,OAAO,CAACU,OAAO,CAACF,IAAI,CAAC,IAAI,CAAC,EAAE;MAC5BC,OAAO,CAACE,MAAM,CAACX,OAAO,CAACU,OAAO,CAACF,IAAI,CAAC,EAAE,CAAC,CAAC;MACxCP,UAAU,CAACQ,OAAO,CAAC;IACvB,CAAC,MAAM;MACHA,OAAO,CAACG,IAAI,CAACJ,IAAI,CAAC;MAClBP,UAAU,CAACQ,OAAO,CAAC;IACvB;IACAN,QAAQ,CAACU,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA7B,SAAS,CAAC,MAAM;IACZ;IACA;EAAA,CACH,EAAE,CAACkB,KAAK,CAAC,CAAC;EAEX,oBACIP,OAAA;IAAKmB,KAAK,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,aAAa,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1DtB,OAAA,CAACJ,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1B,OAAA,CAACF,MAAM;MAACc,aAAa,EAAEA,aAAc;MAACP,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1D1B,OAAA,CAACN,WAAW;MAACW,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA7DYD,eAAe;EAAA,QACPV,WAAW,EACbI,SAAS,EAILH,WAAW;AAAA;AAAAmC,EAAA,GANrB1B,eAAe;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}