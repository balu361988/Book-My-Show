{"ast":null,"code":"import * as actionType from \"./actionTypes\";\nimport axios from \"axios\";\nconst getMovieRequest = () => {\n  return {\n    type: actionType.GET_MOVIE_REQUEST\n  };\n};\nconst getMovieSuccess = payload => {\n  return {\n    type: actionType.GET_MOVIE_SUCCESS,\n    payload\n  };\n};\nconst getMovieFailure = error => {\n  return {\n    type: actionType.GET_MOVIE_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\nexport const getMovies = id => dispatch => {\n  dispatch(getMovieRequest());\n  return axios.get(`https://bookmyshow-clone-masai.herokuapp.com/movies/${id}`).then(res => {\n    dispatch(getMovieSuccess(res.data));\n  }).catch(err => dispatch(getMovieFailure(err)));\n};\nexport const putMovies = (id, param) => dispatch => {\n  // console.log(id, param);\n  // dispatch(getMovieRequest());\n  return axios.patch(`https://bookmyshow-clone-masai.herokuapp.com/movies/${id}`, param).then(res => {\n    dispatch(getMovies(id));\n  }).catch(err => dispatch(getMovieFailure(err)));\n};","map":{"version":3,"names":["actionType","axios","getMovieRequest","type","GET_MOVIE_REQUEST","getMovieSuccess","payload","GET_MOVIE_SUCCESS","getMovieFailure","error","GET_MOVIE_FAILURE","getMovies","id","dispatch","get","then","res","data","catch","err","putMovies","param","patch"],"sources":["/root/Book-My-Show/bookmyshow-app/src/Redux/data/actions.js"],"sourcesContent":["import * as actionType from \"./actionTypes\";\nimport axios from \"axios\";\nconst getMovieRequest = () => {\n  return {\n    type: actionType.GET_MOVIE_REQUEST,\n  };\n};\n\nconst getMovieSuccess = (payload) => {\n  return {\n    type: actionType.GET_MOVIE_SUCCESS,\n    payload,\n  };\n};\n\nconst getMovieFailure = (error) => {\n  return {\n    type: actionType.GET_MOVIE_FAILURE,\n    payload: {\n      error: error,\n    },\n  };\n};\n\nexport const getMovies = (id) => (dispatch) => {\n  dispatch(getMovieRequest());\n  return axios\n    .get(`https://bookmyshow-clone-masai.herokuapp.com/movies/${id}`)\n    .then((res) => {\n      dispatch(getMovieSuccess(res.data));\n    })\n    .catch((err) => dispatch(getMovieFailure(err)));\n};\n\nexport const putMovies = (id, param) => (dispatch) => {\n  // console.log(id, param);\n  // dispatch(getMovieRequest());\n  return axios\n    .patch(`https://bookmyshow-clone-masai.herokuapp.com/movies/${id}`, param)\n    .then((res) => {\n      dispatch(getMovies(id));\n    })\n    .catch((err) => dispatch(getMovieFailure(err)));\n};"],"mappings":"AAAA,OAAO,KAAKA,UAAU,MAAM,eAAe;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,OAAO;IACLC,IAAI,EAAEH,UAAU,CAACI;EACnB,CAAC;AACH,CAAC;AAED,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACnC,OAAO;IACLH,IAAI,EAAEH,UAAU,CAACO,iBAAiB;IAClCD;EACF,CAAC;AACH,CAAC;AAED,MAAME,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLN,IAAI,EAAEH,UAAU,CAACU,iBAAiB;IAClCJ,OAAO,EAAE;MACPG,KAAK,EAAEA;IACT;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,SAAS,GAAIC,EAAE,IAAMC,QAAQ,IAAK;EAC7CA,QAAQ,CAACX,eAAe,CAAC,CAAC,CAAC;EAC3B,OAAOD,KAAK,CACTa,GAAG,CAAC,uDAAuDF,EAAE,EAAE,CAAC,CAChEG,IAAI,CAAEC,GAAG,IAAK;IACbH,QAAQ,CAACR,eAAe,CAACW,GAAG,CAACC,IAAI,CAAC,CAAC;EACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKN,QAAQ,CAACL,eAAe,CAACW,GAAG,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACR,EAAE,EAAES,KAAK,KAAMR,QAAQ,IAAK;EACpD;EACA;EACA,OAAOZ,KAAK,CACTqB,KAAK,CAAC,uDAAuDV,EAAE,EAAE,EAAES,KAAK,CAAC,CACzEN,IAAI,CAAEC,GAAG,IAAK;IACbH,QAAQ,CAACF,SAAS,CAACC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAKN,QAAQ,CAACL,eAAe,CAACW,GAAG,CAAC,CAAC,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}